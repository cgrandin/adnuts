% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample-admb-nuts.R, R/sample-admb-rwm.R,
%   R/sample_admb.R
\name{sample_admb_nuts}
\alias{sample_admb_nuts}
\alias{sample_admb_rwm}
\alias{samplers}
\alias{sample_admb}
\title{Run a single NUTS chain for an ADMB model}
\usage{
sample_admb_nuts(
  path,
  model,
  iter = 2000,
  init = NULL,
  chain = 1,
  thin = 1,
  warmup = NULL,
  seed = NULL,
  duration = NULL,
  control = NULL,
  skip_optimization = TRUE,
  verbose = TRUE,
  admb_args = admb_args,
  hess_step = FALSE,
  fn_logfile = "model_output.log",
  ...
)

sample_admb_rwm(
  path,
  model,
  iter = 2000,
  init = NULL,
  chain = 1,
  thin = 1,
  warmup = ceiling(iter/2),
  seed = NULL,
  duration = NULL,
  control = NULL,
  skip_optimization = TRUE,
  verbose = TRUE,
  admb_args = NULL,
  fn_logfile = "model_output.log",
  ...
)

sample_admb(
  model,
  path = NULL,
  iter = 2000,
  init = NULL,
  num_chains = 3,
  warmup = NULL,
  seeds = NULL,
  thin = 1,
  mceval = FALSE,
  duration = NULL,
  control = NULL,
  algorithm = c("nuts", "rwm"),
  skip_optimization = TRUE,
  skip_monitor = FALSE,
  skip_unbounded = TRUE,
  admb_args = NULL,
  hess_step = FALSE,
  fn_logfile = "model_output.log"
)
}
\arguments{
\item{path}{Path to model executable. Defaults to working
directory. Often best to have model files in a separate
subdirectory, particularly for parallel.}

\item{model}{Name of model (i.e., model.tpl)}

\item{iter}{The number of samples to draw.}

\item{init}{A list of lists containing the initial parameter
vectors, one for each chain or a function. It is strongly
recommended to initialize multiple chains from dispersed
points. A of NULL signifies to use the starting values
present in the model (i.e., \code{obj$par}) for all chains.}

\item{thin}{The thinning rate to apply to samples. Typically
not used with NUTS.}

\item{warmup}{The number of warm up iterations.}

\item{duration}{The number of minutes after which the model
will quit running.}

\item{control}{A list to control the sampler. See details for
further use.}

\item{skip_optimization}{Whether to run the optimizer before
running MCMC. This is rarely need as it is better to run it
once before to get the covariance matrix, or the estimates
are not needed with adaptive NUTS.}

\item{verbose}{Boolean for whether to print ADMB output to console.}

\item{admb_args}{A character string which gets passed to the
command line, allowing finer control}

\item{fn_logfile}{The name of a file to output \code{stdout} from \code{system()}
calls to. If \code{NULL}, \code{stdout} will be printed to the screen}

\item{num_chains}{The number of chains to run. If greater than 1,
use parallel execution (1 core per chain)}

\item{seeds}{A vector of seeds, one for each chain.}

\item{mceval}{Whether to run the model with \code{-mceval} on
samples from merged chains.}

\item{algorithm}{The algorithm to use, one of \code{nuts} or \code{rwm}}

\item{skip_monitor}{Whether to skip calculating diagnostics
(effective sample size, Rhat) via the \code{rstan::monitor}
function. This can be slow for models with high dimension or
many iterations. The result is used in plots and summaries
so it is recommended to turn on. If model run with
\code{skip_monitor = FALSE} you can recreate it post-hoc by
setting \code{fit$monitor=rstan::monitor(fit$samples, fit$warmup, print=FALSE)}}

\item{skip_unbounded}{Whether to skip returning the unbounded
version of the posterior samples in addition to the bounded
ones. It may be advisable to set to FALSE for very large
models to save space}

\item{metric}{The mass metric to use. Options are: "unit" for a unit diagonal
matrix; \code{NULL} to estimate a diagonal matrix during warmup; a matrix
to be used directly (in untransformed space)}

\item{adapt_delta}{Whether adaptation of step size is turned on.}

\item{adapt_mass}{Whether adaptation of mass matrix is turned
on. Currently only allowed for diagonal metric}

\item{adapt_mass_dense}{Whether dense adaptation of mass
matrix is turned on}

\item{max_treedepth}{Maximum treedepth for the NUTS algorithm}

\item{stepsize}{The stepsize for the NUTS algorithm. If \code{NULL} it
will be adapted during warmup}

\item{adapt_init_buffer}{The initial buffer size during mass matrix
adaptation where sample information is not used (default
50)}

\item{adapt_term_buffer}{The terminal buffer size (default 75)
during mass matrix adpatation (final fast phase)}

\item{adapt_window}{The initial size of the mass matrix
adaptation window, which gets doubled each time thereafter}

\item{refresh}{The rate at which to refresh progress to the
console. Defaults to even 10\%. A value of 0 turns off
progress updates}
}
\description{
A low level function to run a single chain. Unlikely to be used by a
user, instead prefer \code{\link[=sample_nuts]{sample_nuts()}}

A low level function to run a single chain. Unlikely to be used by a
user, instead prefer \code{\link[=sample_rwm]{sample_rwm()}}

Draw Bayesian posterior samples from an AD Model Builder
(ADMB) model using an MCMC algorithm. \code{sample_admb(algorithm = 'nuts')}
generates posterior samples from which inference can be made. Adaptation
schemes are used with NUTS so specifying tuning parameters is
not necessary, and parallel execution reduces overall run
time.

The \code{RWM} algorithm provides no new functionality not available
from previous versions of \code{ADMB}. However, \code{sample_admb(algorithm = 'rwm')}
has an improved console output, is setup for parallel execution, and
a smooth workflow for diagnostics. Note that the algorithms'
code lies in the ADMB source code, and \link{adnuts} provides a
wrapper for it. See vignette for more information.
}
\details{
This function implements algorithm 6 of Hoffman and Gelman (2014),
and loosely follows package \link{rstan}. The step size can be
adapted or specified manually. The metric (i.e., mass matrix) can be
unit diagonal, adapted diagonal (default and recommended), a dense
matrix specified by the user, or an adapted dense matrix.
Further control of algorithms can be
specified with the \code{control} argument.
The adaptation scheme (step size and mass matrix) is based heavily on
those by the software Stan, and more details can be found in that
documentation and the vignette.
}
\seealso{
\code{\link[=sample_nuts]{sample_nuts()}}

\code{\link[=sample_rwm]{sample_rwm()}}
}
\author{
Cole Monnahan
}
